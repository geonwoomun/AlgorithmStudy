# BOJ 1783번 병든 나이트 # 다음에 하는걸로...

# N 은 세로 M 은 가로.
# 할 수 있는 것.

# 1. 2칸 위 1칸 오른
# 2. 1칸 위 2칸 오른
# 3. 1칸 아래, 2칸 오른
# 4. 2칸 아래, 1칸 오른.
# 즉 오른쪽으로 다가면 끝..

# 높이가 1이면 움직이지 못 해서 1
# 높이가 2면 최대 4번... 
# 4회 이동후 조건 중 하나라도 만족시키지 못하면 이동도 못한다.

n, m = map(int, input().split())

if(n == 1): print(1) # n이 1이면 위, 아래 아무데고 갈 수 없기 때문에 그대로.
elif(n == 2): print(int(min(4, (m+1)/2))) # n이 2면 위아래로 2개 가는 것은 사용할 수 없기 때문에 무조건 4번 이하. 그니깐 3번 이동 할 수 있는데 처음껄 더해서 4인거임.
# 처음꺼 1 + 움직일 수 있는거 최대 3 해서 최대 4까지만~
elif(n >=3): # 이제 높이가 높아지면 가로로는 무조건 한칸씩 이동한다고 생각하고 한다. 왜냐하면 
    # 위아래로는 움직일 수 있는데 가로로는 오른쪽 밖에 못가기에. 오른쪽이 중요한거임
    if(m < 7): print(min(4,m)) # m이 7이 넘지 않으면 최대로 가봤자 4 즉 3번 이동한것.  
    else: print(m-2)     

# 왜냐하면 1부터 시작해서 6까지 있다고 했을 때 가로로 1+1+2+2 를 이동해버리면 이미 7
# 5번 이상은 못 하는 것. 그니까 최대 4고 가로가 3이면 3번 이동 할 수 있고 4면 4번 이동할수 있고..
# 오른쪽으로 한칸씩 이동 가능.
# 7보다 더크면 이제 최대한으로 이동 가능한데.
# 무조건 2번이동하는게 2번 있으니깐 그거 빼고 다 오른쪽으로 이동한다고 하면 m번 이동한거에 2번 이동한거 2개를 뺀
# 거만큼 이동가능.
# 그니깐 세로로는 위로 아래로 위로아래로 계속 이동 가능 하니깐 상관 없다고 치고
# 가로가 중요한데 한칸씩 이동해야 최대한 많이 이동할 수 있으니깐
# 4가지를 다 쓴 이후부터는 한칸씩 이동한다고 생각해서 하는 것. 2가지는 2칸 이동했으니 2칸 손해 본 것. 

